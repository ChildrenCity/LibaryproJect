<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/projectilm/BookDetail.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/projectilm/BookDetail.java" />
              <option name="originalContent" value="package com.example.projectilm;&#10;&#10;import android.content.Intent;&#10;import android.database.Cursor;&#10;import android.database.sqlite.SQLiteDatabase;&#10;import android.graphics.Bitmap;&#10;import android.graphics.BitmapFactory;&#10;import android.os.Bundle;&#10;import android.widget.ImageView;&#10;import android.widget.TextView;&#10;&#10;import androidx.activity.EdgeToEdge;&#10;import androidx.appcompat.app.AppCompatActivity;&#10;import androidx.core.graphics.Insets;&#10;import androidx.core.view.ViewCompat;&#10;import androidx.core.view.WindowInsetsCompat;&#10;&#10;public class BookDetail extends AppCompatActivity {&#10;    ImageView imageViewBookDetail;&#10;    TextView tvDetailTitle,tvDetail;&#10;    DataBaseHelper dbHelper;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;        EdgeToEdge.enable(this);&#10;        setContentView(R.layout.activity_book_detail);&#10;&#10;        // Initialize views&#10;        imageViewBookDetail = findViewById(R.id.imageViewBookDetail);&#10;        tvDetailTitle = findViewById(R.id.tvDetailTitle);&#10;        tvDetail = findViewById(R.id.tvDetail);&#10;&#10;        dbHelper = new DataBaseHelper(this);&#10;&#10;        // Get book title from intent&#10;        String bookTitle = getIntent().getStringExtra(&quot;BOOK_TITLE&quot;);&#10;&#10;        if (bookTitle != null) {&#10;            SQLiteDatabase db = dbHelper.getReadableDatabase();&#10;            String[] projection = {&#10;                    &quot;BookImage&quot;,&#10;                    &quot;Title&quot;,&#10;                    &quot;Description&quot;&#10;            };&#10;            String selection = &quot;Title = ?&quot;;&#10;            String[] selectionArgs = {bookTitle};&#10;&#10;            Cursor cursor = db.query(&#10;                    &quot;Books&quot;,&#10;                    projection,&#10;                    selection,&#10;                    selectionArgs,&#10;                    null,&#10;                    null,&#10;                    null&#10;            );&#10;&#10;            if (cursor.moveToFirst()) {&#10;                // Get book data&#10;                byte[] imageBytes = cursor.getBlob(cursor.getColumnIndexOrThrow(&quot;BookImage&quot;));&#10;                String title = cursor.getString(cursor.getColumnIndexOrThrow(&quot;Title&quot;));&#10;                String description = cursor.getString(cursor.getColumnIndexOrThrow(&quot;Description&quot;));&#10;&#10;                // Set image&#10;                if (imageBytes != null) {&#10;                    Bitmap bitmap = BitmapFactory.decodeByteArray(imageBytes, 0, imageBytes.length);&#10;                    imageViewBookDetail.setImageBitmap(bitmap);&#10;                }&#10;&#10;                // Set title and description&#10;                tvDetailTitle.setText(title);&#10;                tvDetail.setText(description);&#10;            }&#10;            cursor.close();&#10;        }&#10;    }&#10;}" />
              <option name="updatedContent" value="package com.example.projectilm;&#10;&#10;import android.content.Intent;&#10;import android.database.Cursor;&#10;import android.database.sqlite.SQLiteDatabase;&#10;import android.graphics.Bitmap;&#10;import android.graphics.BitmapFactory;&#10;import android.os.Bundle;&#10;import android.widget.ImageView;&#10;import android.widget.TextView;&#10;&#10;import androidx.activity.EdgeToEdge;&#10;import androidx.appcompat.app.AppCompatActivity;&#10;import androidx.core.graphics.Insets;&#10;import androidx.core.view.ViewCompat;&#10;import androidx.core.view.WindowInsetsCompat;&#10;&#10;public class BookDetail extends AppCompatActivity {&#10;    ImageView imageViewBookDetail;&#10;    TextView tvDetailTitle,tvDetail;&#10;    DataBaseHelper dbHelper;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;        EdgeToEdge.enable(this);&#10;        setContentView(R.layout.activity_book_detail);&#10;&#10;        // Initialize views&#10;        imageViewBookDetail = findViewById(R.id.imageViewBookDetail);&#10;        tvDetailTitle = findViewById(R.id.tvDetailTitle);&#10;        tvDetail = findViewById(R.id.tvDetail);&#10;&#10;        dbHelper = new DataBaseHelper(this);&#10;&#10;        // Get book title from intent&#10;        String bookTitle = getIntent().getStringExtra(&quot;BOOK_TITLE&quot;);&#10;&#10;        if (bookTitle != null) {&#10;            SQLiteDatabase db = dbHelper.getReadableDatabase();&#10;            String[] projection = {&#10;                    &quot;BookImage&quot;,&#10;                    &quot;Title&quot;,&#10;                    &quot;Description&quot;&#10;            };&#10;            String selection = &quot;Title = ?&quot;;&#10;            String[] selectionArgs = {bookTitle};&#10;&#10;            Cursor cursor = db.query(&#10;                    &quot;Books&quot;,&#10;                    projection,&#10;                    selection,&#10;                    selectionArgs,&#10;                    null,&#10;                    null,&#10;                    null&#10;            );&#10;&#10;            if (cursor.moveToFirst()) {&#10;                // Get book data&#10;                byte[] imageBytes = cursor.getBlob(cursor.getColumnIndexOrThrow(&quot;BookImage&quot;));&#10;                String title = cursor.getString(cursor.getColumnIndexOrThrow(&quot;Title&quot;));&#10;                String description = cursor.getString(cursor.getColumnIndexOrThrow(&quot;Description&quot;));&#10;&#10;                // Set image&#10;                if (imageBytes != null) {&#10;                    Bitmap bitmap = BitmapFactory.decodeByteArray(imageBytes, 0, imageBytes.length);&#10;                    imageViewBookDetail.setImageBitmap(bitmap);&#10;                }&#10;&#10;                // Set title and description&#10;                tvDetailTitle.setText(title);&#10;                tvDetail.setText(description);&#10;            }&#10;            cursor.close();&#10;        }&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>